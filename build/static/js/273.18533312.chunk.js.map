{"version":3,"file":"static/js/273.18533312.chunk.js","mappings":"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","sources":["components/video/VideoSearch.jsx","pages/Channel.jsx","utils/api.js"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n}\r\n\r\nconst VideoSearch = ({ videos, channelId }) => {\r\n    return (\r\n        <>\r\n            {videos && videos.length > 0 ? (\r\n                videos.map((video, key) => (\r\n                    <div className='video' key={key}>\r\n                        <div className=\"video__thumb play__icon\">\r\n                            <Link\r\n                                to={`/video/${video.id.videoId}`}\r\n                                style={{ backgroundImage: `url(${video.snippet.thumbnails.high.url})` }}\r\n                            >\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"video__info\">\r\n                            <h3 className='title'>\r\n                                <Link to={`/video/${video.id.videoId}`}>{video.snippet.title}</Link>\r\n                            </h3>\r\n                            <p className='desc'>\r\n                                {video.snippet.description}\r\n                            </p>\r\n                            <div className='info' style={{ display: channelId ? 'none' : '' }}>\r\n                                <Link to={`/channel/${video.snippet.channelId}`} className='author'>{video.snippet.channelTitle}</Link>\r\n                                <span className='date'>{formatDate(video.snippet.publishedAt)}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No videos available</p>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VideoSearch","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { fetchFromAPI } from '../utils/api';\r\nimport VideoSearch from '../components/video/VideoSearch';\r\nimport Main from '../components/section/Main';\r\n\r\nconst Channel = () => {\r\n    const { channelId } = useParams();\r\n    const [channelDetail, setChannelDetail] = useState();\r\n    const [channelVideo, setChannelVideo] = useState([]);\r\n    const [nextPageToken, setNextPageToken] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchResults = async () => {\r\n            try {\r\n                const data = await fetchFromAPI(`channels?part=snippet&id=${channelId}`);\r\n                setChannelDetail(data.items[0])\r\n\r\n                const videoData = await fetchFromAPI(`search?channelId=${channelId}&part=snippet&order=date`);\r\n                setChannelVideo(videoData.items);\r\n                setNextPageToken(videoData.nextPageToken);\r\n            } catch (error) {\r\n                console.log(\"Erorr ->\", error)\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n        fetchResults();\r\n    }, [channelId])\r\n\r\n    const loadMoreVideos = async () => {\r\n        if (nextPageToken) {\r\n            const videoData = await fetchFromAPI(`search?channelId=${channelId}&part=snippet&pageToken=${nextPageToken}&order=date`);\r\n            setChannelVideo((prevVideos) => [...prevVideos, ...videoData.items]);\r\n            setNextPageToken(videoData?.nextPageToken);\r\n        }\r\n    }\r\n\r\n    const channelPageclass = loading ? 'isLoading' : 'isLoaded';\r\n\r\n    return (\r\n        <Main\r\n            title='음악 유튜버 채널'\r\n            description='음악 유튜버 채널 페이지입니다. 채널의 영상을 모두 확인할 수 있습니다.'\r\n        >\r\n\r\n            <section id='channelPage' className={channelPageclass}>\r\n                {channelDetail && (\r\n                    <div className=\"channel__inner\">\r\n                        <div className='channel__header' style={{ backgroundImage: channelDetail ? `url(${channelDetail.brandingSettings.image.bannerExternalUrl})` : 'none' }}>\r\n                        </div>\r\n                        <div className=\"channel__info\">\r\n                            <div className=\"channel__master\">\r\n                                <div className=\"circle\">\r\n                                    <img src={channelDetail.snippet.thumbnails.high.url} alt={channelDetail.snippet.title} />\r\n                                </div>\r\n                                <div className=\"channel__text\">\r\n                                    <div>\r\n                                        <h3 className='title'>{channelDetail.snippet.title}</h3>\r\n                                        <div>\r\n                                            <span>{channelDetail.snippet.customUrl}</span>\r\n                                            <span>구독자 {channelDetail.statistics.subscriberCount}명</span>\r\n                                            <span>동영상 {channelDetail.statistics.videoCount}개</span>\r\n                                            <span>조회수 {channelDetail.statistics.viewCount}회</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='desc'>{channelDetail.snippet.description}</div>\r\n                        </div>\r\n                        <div className=\"channel__video video__inner\">\r\n                            <VideoSearch videos={channelVideo} channelId={channelId} />\r\n                        </div>\r\n                        <div className=\"channel__more\">\r\n                            {nextPageToken && <button onClick={loadMoreVideos}>더 보기</button>}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </section>\r\n\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default Channel","import axios from \"axios\";\r\n\r\nexport const BASE_URL = 'https://youtube-v31.p.rapidapi.com'\r\n\r\nconst options = {\r\n    params: {\r\n        maxResults: '48',\r\n    },\r\n    headers: {\r\n        'X-RapidAPI-Key': process.env.REACT_APP_RAPID_API_KEY,\r\n        'X-RapidAPI-Host': 'youtube-v31.p.rapidapi.com'\r\n    }\r\n};\r\n\r\nexport const fetchFromAPI = async (url) => {\r\n    const { data } = await axios.get(`${BASE_URL}/${url}`, options);\r\n    return data;\r\n}"],"names":["formatDate","dateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","concat","_ref","videos","channelId","_jsx","_Fragment","children","length","map","video","key","_jsxs","className","Link","to","id","videoId","style","backgroundImage","snippet","thumbnails","high","url","title","description","display","channelTitle","publishedAt","Channel","useParams","channelDetail","setChannelDetail","useState","channelVideo","setChannelVideo","nextPageToken","setNextPageToken","loading","setLoading","useEffect","async","data","fetchFromAPI","items","videoData","error","console","log","fetchResults","channelPageclass","Main","brandingSettings","image","bannerExternalUrl","src","alt","customUrl","statistics","subscriberCount","videoCount","viewCount","VideoSearch","onClick","prevVideos","options","params","maxResults","headers","process","axios","get"],"sourceRoot":""}