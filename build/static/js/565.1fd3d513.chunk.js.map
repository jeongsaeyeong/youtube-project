{"version":3,"file":"static/js/565.1fd3d513.chunk.js","mappings":"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","sources":["components/video/VideoSearch.jsx","pages/Search.jsx","utils/api.js"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n}\r\n\r\nconst VideoSearch = ({ videos, channelId }) => {\r\n    return (\r\n        <>\r\n            {videos && videos.length > 0 ? (\r\n                videos.map((video, key) => (\r\n                    <div className='video' key={key}>\r\n                        <div className=\"video__thumb play__icon\">\r\n                            <Link\r\n                                to={`/video/${video.id.videoId}`}\r\n                                style={{ backgroundImage: `url(${video.snippet.thumbnails.high.url})` }}\r\n                            >\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"video__info\">\r\n                            <h3 className='title'>\r\n                                <Link to={`/video/${video.id.videoId}`}>{video.snippet.title}</Link>\r\n                            </h3>\r\n                            <p className='desc'>\r\n                                {video.snippet.description}\r\n                            </p>\r\n                            <div className='info' style={{ display: channelId ? 'none' : '' }}>\r\n                                <Link to={`/channel/${video.snippet.channelId}`} className='author'>{video.snippet.channelTitle}</Link>\r\n                                <span className='date'>{formatDate(video.snippet.publishedAt)}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No videos available</p>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VideoSearch","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport VideoSearch from '../components/video/VideoSearch';\r\nimport { fetchFromAPI } from '../utils/api';\r\nimport Main from '../components/section/Main';\r\n\r\nconst Search = () => {\r\n    const { searchId } = useParams();\r\n    const [videos, setVideos] = useState([]);\r\n    const [nextPageToken, setNextPageToken] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        setVideos([]);\r\n        fetchVideos(searchId);\r\n        setLoading(true);\r\n    }, [searchId]);\r\n\r\n    const fetchVideos = (query, pageToken = '') => {\r\n        fetchFromAPI(`search?type=video&part=snippet&q=${query}&pageToken=${pageToken}`)\r\n            .then((data) => {\r\n                setNextPageToken(data.nextPageToken);\r\n                setVideos((prevVideos) => [...prevVideos, ...data.items])\r\n                console.log(data)\r\n                setLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error fetching data\", error);\r\n                setLoading(false);\r\n            })\r\n    }\r\n\r\n    const channelPageclass = loading ? 'isLoading' : 'isLoaded';\r\n\r\n    const handleLoadMore = () => {\r\n        if (nextPageToken) {\r\n            fetchVideos(searchId, nextPageToken);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Main\r\n            title='유튜버 검색 결과'\r\n            description='유튜버 검색 결과입니다.'\r\n        >\r\n            <section id='searchPage'>\r\n                <h2>{searchId}검색 결과입니다.</h2>\r\n\r\n                <div className={`video__inner ${channelPageclass}`}>\r\n                    <VideoSearch videos={videos} />\r\n                </div>\r\n\r\n                <div className=\"video__more\">\r\n                    <button onClick={handleLoadMore}>더 보기</button>\r\n                </div>\r\n            </section>\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default Search","import axios from \"axios\";\r\n\r\nexport const BASE_URL = 'https://youtube-v31.p.rapidapi.com'\r\n\r\nconst options = {\r\n    params: {\r\n        maxResults: '48',\r\n    },\r\n    headers: {\r\n        'X-RapidAPI-Key': process.env.REACT_APP_RAPID_API_KEY,\r\n        'X-RapidAPI-Host': 'youtube-v31.p.rapidapi.com'\r\n    }\r\n};\r\n\r\nexport const fetchFromAPI = async (url) => {\r\n    const { data } = await axios.get(`${BASE_URL}/${url}`, options);\r\n    return data;\r\n}"],"names":["formatDate","dateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","concat","_ref","videos","channelId","_jsx","_Fragment","children","length","map","video","key","_jsxs","className","Link","to","id","videoId","style","backgroundImage","snippet","thumbnails","high","url","title","description","display","channelTitle","publishedAt","Search","searchId","useParams","setVideos","useState","nextPageToken","setNextPageToken","loading","setLoading","useEffect","fetchVideos","query","pageToken","arguments","undefined","fetchFromAPI","then","data","prevVideos","items","console","log","catch","error","channelPageclass","Main","VideoSearch","onClick","handleLoadMore","options","params","maxResults","headers","process","async","axios","get"],"sourceRoot":""}